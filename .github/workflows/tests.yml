name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        django-version: ["3.2", "4.0", "4.1", "4.2", "5.0"]
        exclude:
          # Django 5.0 requires Python 3.10+
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.0"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install django==${{ matrix.django-version }}
        pip install -e ".[dev]"
    
    - name: Run tests with coverage
      run: |
        pytest --cov=turbodrf --cov-report=xml --cov-report=term-missing -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run black
      run: |
        black --check turbodrf/ tests/
    
    - name: Run isort
      run: |
        isort --check-only --diff turbodrf/ tests/
    
    - name: Run flake8
      run: |
        flake8 turbodrf/ tests/
    
    - name: Run mypy
      run: |
        mypy turbodrf/ || true  # Allow mypy to fail for now

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install sphinx sphinx-rtd-theme
    
    - name: Build documentation
      run: |
        cd docs || mkdir docs
        sphinx-build -b html . _build/html || echo "Documentation build skipped - no docs directory yet"